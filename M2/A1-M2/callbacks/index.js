/*Um callback √© uma fun√ß√£o que √© passada como argumento para outra fun√ß√£o e √© executada depois que a fun√ß√£o principal termina sua opera√ß√£o ou atinge um ponto espec√≠fico. Callbacks s√£o amplamente utilizados em programa√ß√£o ass√≠ncrona, como no JavaScript, para garantir que uma fun√ß√£o seja executada ap√≥s outra fun√ß√£o ter terminado, sem bloquear o restante do c√≥digo.

Como funciona o Callback?

Quando uma fun√ß√£o √© executada, voc√™ pode querer que uma a√ß√£o adicional seja realizada depois que ela terminar. Em vez de colocar esse c√≥digo diretamente na fun√ß√£o, voc√™ pode passar uma fun√ß√£o callback que ser√° chamada no momento adequado.

Crie um programa utilizando  "let" e "const" em JavaScript:
 Crie um programa que calcule a m√©dia de notas de uma turma, armazenando as notas em vari√°veis usando "let" e declarando constantes utilizando "const" para valores fixos, como o n√∫mero m√°ximo de notas.

[Para ir al√©müõ∏]
Utilize o prompt para o usu√°rio inserir as notas.

*/
const somarMedia = function (valor1, valor2, valor3, valor4) {
    alert((valor1 + valor2 + valor3 + valor4) / 4)
}

function media(funcaoParaSomar) {
    let nota1 = Number(prompt("Digite a sua nota 1:"))
    let nota2 = Number(prompt("Digite a sua nota 2:"))
    let nota3 = Number(prompt("Digite a sua nota 3:"))
    let nota4 = Number(prompt("Digite a sua nota 4:"))
    funcaoParaSomar(nota1, nota2, nota3, nota4)
}

media(somarMedia)

/*
// Fun√ß√£o an√¥nima que recebe um nome e uma fun√ß√£o de callback
(function(nome, callback) {
    // Dentro da fun√ß√£o, voc√™ pode realizar alguma l√≥gica
    // Por exemplo, criar uma mensagem personalizada:
    let mensagem = `Ol√°, ${nome}! Seja bem-vindo(a).`;
  
    // Chamando a fun√ß√£o de callback, passando a mensagem como argumento
    callback(mensagem);
  })('Daiane', function(msg) {
    console.log(msg); // Exibe a mensagem no console
  });


  function saudarPersonalizado(callback) {
    let nome = prompt("Qual o seu nome?");
    let mensagem = `Ol√°, ${nome}! Seja bem-vindo(a) ao nosso site.`;
  
    callback(mensagem);
  }
  
  // Exemplo de uso:
  saudarPersonalizado(function(msg) {
    console.log(msg); // Exibe a mensagem no console
  });
  
  // Outro exemplo, exibindo a mensagem em um elemento HTML com id "resultado":
  saudarPersonalizado(function(msg) {
    document.getElementById("resultado").textContent = msg;
  });
  */

  /*
  function saudarPersonalizado(callback) {
  let nome = prompt("Qual o seu nome?");
  let idade = prompt("Qual a sua idade?");
  let mensagem = `Ol√°, ${nome}! Seja bem-vindo(a). Voc√™ tem ${idade} anos.`;

  callback(mensagem);
} */

  const functionAnonima = (nome, funcao) => {
    funcao(nome);
  }

  function exibirMensagem(nome) {
    console.log("Ol√° $")
  }